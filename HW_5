1. Создайте представление, в которое попадет информация о пользователях (имя, фамилия,
город и пол), которые не старше 20 лет.

CREATE VIEW task1 AS 
SELECT firstname, lastname, hometown, gender FROM users
JOIN profiles ON users.id = profiles.user_id
WHERE profiles.birthday <= '2003-08-26'

2. Найдите кол-во, отправленных сообщений каждым пользователем и выведите
ранжированный список пользователей, указав имя и фамилию пользователя, количество
отправленных сообщений и место в рейтинге (первое место у пользователя с максимальным
количеством сообщений) . (используйте DENSE_RANK)

SELECT firstname, lastname, COUNT(messages.id) AS message,
DENSE_RANK() OVER(ORDER BY COUNT(messages.id)) 
FROM messages JOIN users ON messages.from_user_id = users.id
GROUP BY from_user_id

3. Выберите все сообщения, отсортируйте сообщения по возрастанию даты отправления
(created_at) и найдите разницу дат отправления между соседними сообщениями, получившегося
списка. (используйте LEAD или LAG)

SELECT id, from_user_id, to_user_id, created_at, LAG(created_at) OVER(ORDER BY created_at)
FROM messages
ORDER BY created_at
